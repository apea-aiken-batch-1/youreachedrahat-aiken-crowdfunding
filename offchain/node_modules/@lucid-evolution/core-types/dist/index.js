// src/types.ts
import * as CML from "@anastasia-labs/cardano-multiplatform-lib-nodejs";
var isDRepCredential = (deleg) => !("__typename" in deleg);
var isDRepAlwaysAbstain = (deleg) => !isDRepCredential(deleg) && deleg.__typename === "AlwaysAbstain";
var isDRepAlwaysNoConfidence = (deleg) => !isDRepCredential(deleg) && deleg.__typename === "AlwaysNoConfidence";
var toCMLDRep = (drep) => {
  if (isDRepAlwaysAbstain(drep)) {
    return CML.DRep.new_always_abstain();
  } else if (isDRepAlwaysNoConfidence(drep)) {
    return CML.DRep.new_always_no_confidence();
  } else if (isDRepCredential(drep)) {
    switch (drep.type) {
      case "Key":
        return CML.DRep.new_key(CML.Ed25519KeyHash.from_hex(drep.hash));
      case "Script":
        return CML.DRep.new_script(CML.ScriptHash.from_hex(drep.hash));
      default:
        throw new Error("Invalid DRep type");
    }
  }
  throw new Error("Unsupported");
};
export {
  isDRepAlwaysAbstain,
  isDRepAlwaysNoConfidence,
  isDRepCredential,
  toCMLDRep
};
