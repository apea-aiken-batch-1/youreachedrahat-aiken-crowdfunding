import { Cloneable } from "../utils/Cloneable.js";
import { ToRawObj } from "./interfaces/ToRawObj.js";
import { ICborObj } from "./interfaces/ICborObj.js";
import { CborBytes } from "./CborBytes.js";
export type RawCborUInt = {
    uint: bigint;
};
export declare function isRawCborUnsigned(unsign: RawCborUInt): boolean;
export declare class CborUInt implements ToRawObj, Cloneable<CborUInt>, ICborObj {
    private _num;
    get num(): bigint;
    set num(uint: bigint | number);
    addInfos: number;
    bigNumEncoding: CborBytes | undefined;
    isBigNum(): boolean;
    constructor(uint: number | bigint, addInfos?: number, bigNumEncoding?: CborBytes);
    static bigNum(encoding: CborBytes | bigint | number): CborUInt;
    toRawObj(): RawCborUInt;
    clone(): CborUInt;
}
